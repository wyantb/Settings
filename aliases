#!/bin/bash

DOTFILES_HOME=$HOME/.dotfiles

# http://stackoverflow.com/a/11512211
dir_to_755() {
    find ./ -type d -exec chmod 755 {} \;
}
files_to_644() {
    find /opt/lampp/htdocs -type f -exec chmod 644 {} \;
}

alias vim=nvim

alias cls='clear; ls'
alias sadd='ssh-add'
alias serve='sudo nginx'
alias pc='sudo bash $DOTFILES_HOME/scripts/portcheck.sh'
alias ccadd="ccollab addgitdiffs"
alias ffpriv='firefox -new-instance -private &'
alias killorig='find . -depth -name "*.orig" -type f -delete'

alias dck='sudo docker'
alias dck-remoteuntagged='dck images -q --filter "dangling=true" | xargs sudo docker rmi -f'
alias dck-runsite='sudo docker run -it --net=host personal-site'
#http://stackoverflow.com/questions/17903705/is-it-possible-to-start-a-shell-session-in-a-running-container-without-ssh
#docker run --name ubuntu_bash --rm -i -t ubuntu bash

# in my $HOME/.gitconfig in [alias] section:
# tclean = clean -f -x -d --exclude 'node_modules'
alias git-reset='git tclean; git reset --hard; git sub init; git sub update; git sub foreach --recursive "git tclean; git reset --hard; git sub init; git sub update; git-reset;";'

# Adapted from http://superuser.com/a/39780
alias inPath="echo $PATH | tr ':' '\n' | grep -x -c >/dev/null"
alias countInPath="echo $PATH | tr ':' '\n' | grep -x -c"

alias morningRoutine="git fetch && tig --all --author-date-order --no-merges"
alias mr=morningRoutine

alias use-real-scrollbars='gsettings set com.canonical.desktop.interface scrollbar-mode normal'
alias use-default-scrollbars='gsettings reset com.canonical.desktop.interface scrollbar-mode'

alias killxsel="pkill -c xsel"
alias kx=killxsel

alias cripple_zeitgeist='chmod -rw ~/.local/share/zeitgeist/activity.sqlite && zeitgeist-daemon --replace'
alias restore_zeitgesit='chmod +rw ~/.local/share/zeitgeist/activity.sqlite && zeitgeist-daemon --replace'

alias dosuspend='systemctl suspend'

alias deleteorigfiles="find . -name '*.orig' -delete "

# don't know why this happens...
alias fixmouse="sudo modprobe -r psmouse && sudo modprobe psmouse"
alias fixwireless='sudo service network-manager restart'
alias fixunity='unity --reset-icons &disown'
alias fixdiff='export $(dbus-launch)'
alias fixdisplay='export DISPLAY=:0.0'
alias fixkdiff='fixdiff && fixdisplay'
alias fixssh='eval `ssh-agent -s`'
alias fixterminal='stty sane'

# Lets you do something like `command || err`
alias err='notify-send "Build Failed"'

# Make 'ls' command pretty by default
alias ls='ls -Gap'
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Other handy things
mcd () { mkdir -p "$1" && cd "$1"; }                # mcd:          Makes new Dir and jumps inside
alias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address
alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
alias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache
alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections
alias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IPs

# Epoch seconds to date, and back:
epoch2date(){ (alias; declare -f) | echo "$@" | perl -ne 'chomp; my @in = split /\s+/, $_; map { my $out = ( $_ =~ m/^(\d{1,10})\d*$/ ) ? scalar localtime($1) : "Invalid time format ($in)- not epoch seconds."; print "$out\n" } @in;'; }

date2epoch(){ (alias; declare -f) | echo "$@" | perl -MDate::Parse -ne 'chomp; print str2time($_), "\n";'; }

fileintoclipmac () {
    cat $1 | pbcopy
}

# fh - repeat history
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}
